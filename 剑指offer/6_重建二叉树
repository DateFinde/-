输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

        TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> vin) 
        {
        if(pre.size() == 0 || pre.size() != vin.size())
        {
            return nullptr;
        }
        
        int root = pre[0];
        TreeNode *newTree = new TreeNode(root);
        if(pre.size() == 1)
        {
            return newTree;
        }
        
        auto pos = find(vin.begin(),vin.end(),root);
        if(pos == vin.end())
        {
            return nullptr;
        }
        
        int leftSize = pos - vin.begin();
        int rightSize = vin.end() - pos - 1;
        newTree->left = reConstructBinaryTree(vector<int> (pre.begin()+ 1,pre.begin() + 1 + leftSize),
                                vector<int> (vin.begin(),vin.begin() + leftSize));
        newTree->right = reConstructBinaryTree(vector<int> (pre.begin() + 1 + leftSize,pre.end()),
                                vector<int> (vin.begin() + leftSize + 1, vin.end()));
        
        return newTree;
        }
