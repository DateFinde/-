给定一个长度不超过 10^4 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 PATestPATest.... 这样的顺序输出，并忽略其它字符。当然，
六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。

输入格式：
输入在一行中给出一个长度不超过 10^4 的、仅由英文字母构成的非空字符串。

输出格式：
在一行中按题目要求输出排序后的字符串。题目保证输出非空。

输入样例：
redlesPayBestPATTopTeePHPereatitAPPT
输出样例：
PATestPATestPTetPTePePee



#include <set>
#include <map>
#include <deque> 
#include <list>
#include <bitset>
#include <stack>
#include <queue>
#include <vector>
#include <cstring>
#include <algorithm>
#include <assert.h>

#include <iostream>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdlib>
#include <iomanip>
using namespace std;


int main(int argc, char** argv) {
	string word;
	getline(cin,word);
	map<char,int> result;
	for(int i=0;i<word.length();++i){
		char ch=word[i];
		if(result.find(ch)==result.end()){
			result[ch]=1;
		}
		else{
			result[ch]++;
		}
	}
	while(result['P']>0||result['A']>0||result['T']>0||result['e']>0||result['s']>0||result['t']>0){
		if(result['P']>0){
			cout<<"P";
			result['P']--;
		}
		if(result['A']>0){
			cout<<"A";
			result['A']--;
		}
		if(result['T']>0){
			cout<<"T";
			result['T']--;
		}
		if(result['e']>0){
			cout<<"e";
			result['e']--;
		}
		if(result['s']>0){
			cout<<"s";
			result['s']--;
		}
		if(result['t']>0){
			cout<<"t";
			result['t']--;
		}
	}
    return 0;
}

