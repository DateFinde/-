给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：

A1 = 能被 5 整除的数字中所有偶数的和；
A2 = 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 n1−n2+n3−n4⋯；
A3 = 被 5 除后余 2 的数字的个数；
A4 = 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；
A5 = 被 5 除后余 4 的数字中最大数字。

输入格式：
每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。

输出格式：
对给定的 N 个正整数，按题目要求计算 A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。

若其中某一类数字不存在，则在相应位置输出 N。

输入样例 1：
13 1 2 3 4 5 6 7 8 9 10 20 16 18
输出样例 1：
30 11 2 9.7 9
输入样例 2：
8 1 2 4 5 6 7 9 16
输出样例 2：
N 11 2 N 9


#include <set>
#include <map>
#include <deque> 
#include <list>
#include <bitset>
#include <stack>
#include <queue>
#include <vector>
#include <cstring>
#include <algorithm>
#include <assert.h>

#include <iostream>
#include <cmath>
#include <stdlib.h>
using namespace std;



int main(int argc, char** argv) {
	int n;
    cin>>n;
    vector<int> number;
	for(int i=0;i<n;++i){
		int flag;
		cin>>flag;
		number.push_back(flag);
	} 
	
	int A5=0,A3=0,A1=0,A2=0;
	double sum=0.0;
	int count=0;
	int flag=1;
	vector<int> v(5,0);
	for(int i=0;i<n;++i){
		if(number[i]%5==0&&number[i]%2==0){
			A1+=number[i];
			v[0]=1;
		}
		if(number[i]%5==1){
			A2+=flag*number[i];
			flag*=-1;
			v[1]=1;
		}
		if(number[i]%5==2){
			++A3;
			v[2]=1;
		}
		if(number[i]%5==3){
			++count;
			sum+=number[i];
			v[3]=1;
		}
		if(number[i]%5==4){
			if(number[i]>A5){
				A5=number[i];
				v[4]=1;
			}
		}
	}
	
	if(v[0]==0){
		cout<<"N";
	}
	else{
		cout<<A1;
	}
	if(v[1]==0){
		cout<<" N";
	}
	else{
		cout<<" "<<A2;
	}
	if(v[2]==0){
		cout<<" N";
	}
	else{
		cout<<" "<<A3;
	}
	if(v[3]==0){
		cout<<" N";
	}
	else{
		printf(" %.1f",sum/count);
	}
	if(v[4]==0){
		cout<<" N";
	}
	else{
		cout<<" "<<A5;
	}
    return 0;
}
