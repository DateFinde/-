根据维基百科的定义：

插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。
如此迭代直到全部元素有序。

归并排序进行如下迭代操作：首先将原始序列看成 N 个只包含 1 个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，
直到最后只剩下 1 个有序的序列。

现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？

输入格式：
输入在第一行给出正整数 N (≤100)；随后一行给出原始序列的 N 个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。
数字间以空格分隔。

输出格式：
首先在第 1 行中输出Insertion Sort表示插入排序、或Merge Sort表示归并排序；然后在第 2 行中输出用该排序算法再迭代一轮的结果序列。
题目保证每组测试的结果是唯一的。数字间以空格分隔，且行首尾不得有多余空格。

输入样例 1：
10
3 1 2 8 7 5 9 4 6 0
1 2 3 7 8 5 9 4 6 0
输出样例 1：
Insertion Sort
1 2 3 5 7 8 9 4 6 0
输入样例 2：
10
3 1 2 8 7 5 9 4 0 6
1 3 2 8 5 7 4 9 0 6
输出样例 2：
Merge Sort
1 2 3 8 4 5 7 9 0 6




#include <set>
#include <map>
#include <deque> 
#include <list>
#include <bitset>
#include <stack>
#include <queue>
#include <vector>
#include <cstring>
#include <algorithm>
#include <assert.h>

#include <iostream>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdlib>
#include <iomanip>
using namespace std;

/*int cmp(goods a,goods b)
{
	return a.unit>b.unit;
}*/
int main(int argc, char** argv) {
	int n;
	cin>>n;
	int *a=new int [n];
	int *b=new int [n];
	for(int i=0;i<n;++i){
		cin>>*(a+i);
	}
	for(int i=0;i<n;++i){
		cin>>*(b+i);
	}
	int i,j;
	for(i=0;i<n-1&&*(b+i)<=*(b+i+1);++i);
	for(j=i+1;a[j]==b[j]&&j<n;++j);
	if(j==n){
		//插入排序 
		cout<<"Insertion Sort"<<endl;
		sort(a,a+2+i);
	}
	else{
		//归并排序 
		cout<<"Merge Sort"<<endl;
		int k=1,flag=1;
		while(flag){
			flag=0;
			for(int i=0;i<n;++i){
				if(a[i]!=b[i]){
					flag=1;
				}
			}
			k*=2;
			for(int i=0;i<n/k;++i){
				sort(a+i*k,a+(i+1)*k);
			}
			sort(a+n/k*k,a+n);
		}
	}
	
	for(int i=0;i<n;++i){
		if(i==0){
		  cout<<a[i];
		}
		else{
		  cout<<" "<<a[i];
		}
	}
	delete []a;
	delete []b;
    return 0;
}













