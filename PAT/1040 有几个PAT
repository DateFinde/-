字符串 APPAPT 中包含了两个单词 PAT，其中第一个 PAT 是第 2 位(P)，第 4 位(A)，第 6 位(T)；第二个 PAT 是第 3 位(P)，第 4 位(A)，第 6 位(T)。

现给定字符串，问一共可以形成多少个 PAT？

输入格式：
输入只有一行，包含一个字符串，长度不超过10^5，只包含 P、A、T 三种字母。

输出格式：
在一行中输出给定字符串中包含多少个 PAT。由于结果可能比较大，只输出对 1000000007 取余数的结果。

输入样例：
APPAPT
输出样例：
2




#include <set>
#include <map>
#include <deque> 
#include <list>
#include <bitset>
#include <stack>
#include <queue>
#include <vector>
#include <cstring>
#include <algorithm>
#include <assert.h>

#include <iostream>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdlib>
#include <iomanip>
using namespace std;

struct node{
	int address;
	int data;
	int next;
};

/*int cmp(goods a,goods b)
{
	return a.unit>b.unit;
}*/
int main(int argc, char** argv) {
	string word;
	cin>>word;
	
	int result=0;
	int countP=0;
	int countT=0;
	for(int i=0;i<word.length();i++){
		if(word[i]=='T'){
			countT++;
		}
	}
	for(int i=0;i<word.length();i++){
		if(word[i]=='P'){
			countP++;
		}
		if(word[i]=='T'){
			countT--;
		}
		if(word[i]=='A'){
			result=(result+(countP*countT)%1000000007)%1000000007;
		}
	}
	
	cout<<result;
    return 0;
}












