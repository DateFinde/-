科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式 [+-][1-9].[0-9]+E[+-][0-9]+，即数字的整数部分只有 1 位，
小数部分至少有 1 位，该数字及其指数部分的正负号即使对正数也必定明确给出。

现以科学计数法的格式给出实数 A，请编写程序按普通数字表示法输出 A，并保证所有有效位都被保留。

输入格式：
每个输入包含 1 个测试用例，即一个以科学计数法表示的实数 A。该数字的存储长度不超过 9999 字节，且其指数的绝对值不超过 9999。

输出格式：
对每个测试用例，在一行中按普通数字表示法输出 A，并保证所有有效位都被保留，包括末尾的 0。

输入样例 1：
+1.23400E-03
输出样例 1：
0.00123400
输入样例 2：
-1.2E+10
输出样例 2：
-12000000000


#include <set>
#include <map>
#include <deque> 
#include <list>
#include <bitset>
#include <stack>
#include <queue>
#include <vector>
#include <cstring>
#include <algorithm>
#include <assert.h>

#include <iostream>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdlib>
#include <iomanip>
using namespace std;

/*struct goods{
	float weight;
    float money;
	double unit;
};

int cmp(goods a,goods b)
{
	return a.unit>b.unit;
}*/
int main(int argc, char** argv) {
	string word;
	cin>>word;
	int pos=word.find('E');
	//cout<<pos<<endl;
	
	string subw=word.substr(1,pos-1);
	int size=pos-1;
	int number=stoi(word.substr(pos+1));
	if(word[0]=='-'){
		cout<<"-";
	}
	if(number<0){
		cout<<"0.";
		for(int i=0;i<abs(number)-1;++i){
			cout<<'0';
		}
		for(int i=0;i<size;++i){
			if(subw[i]!='.'){
				cout<<subw[i];
			}
		}
	}
	else{
		cout<<subw[0];
		int cnt,j;
		for(j=2,cnt=0;j<size&&cnt<number;++cnt,++j){
			cout<<subw[j];
		}
		if(j==size){
			for(int i=0;i<number-cnt;++i){
				cout<<'0';
			}
		}
		else{
			cout<<".";
			for(int i=j;i<size;++i){
				cout<<subw[i];
			}
		}
	}
	
    return 0;
}












