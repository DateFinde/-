1.输出指定长度子串
给定一个字符串，输出所有指定长度为n的子串，没有则输出-1

输入描述:
输入第一行一个字符串，如：“1234567890”
输入第二行一个数字是n，如5
输出描述:
输出所有长度为n的子串，如“12345”，“23456”，“34567”，“45678”，“56789”

输入例子1:
123456789
5
输出例子1:
12345 23456 34567 45678 56789


#include <bits/stdc++.h>
using namespace std;

int main()
{
    string word;
    int n;
    cin>>word>>n;
    if(word.size()<n)
    {
        cout<<"-1";
        return 0;
    }

    for(int i=0;i<word.size()-n+1;++i)
    {
        if(i!=0)
        {
            cout<<" ";
        }
        cout<<word.substr(i,n);

    }

    return 0;
}




2.链表合并
请编写一段代码，实现两个单向有序链表的合并

输入描述:
第一行一个链表，如1 2 3 4 5
第二行一个链表，如2 3 4 5 6
输出描述:
输出：1 2 2 3 3 4 4 5 5 6

输入例子1:
1 2 3 4 5
2 3 4 5 6
输出例子1:
1 2 2 3 3 4 4 5 5 6


data1=input().split(' ')
data1=list(map(int,data1))
data2=input().split(' ')
data2=list(map(int,data2))

sum=[]
i=0
j=0
while (i < len(data1)) and (j < len(data2)):
    if data1[i] < data2[j]:
        sum.append(data1[i])
        i += 1
    else:
        sum.append(data2[j])
        j += 1
while i < len(data1):
    sum.append(data1[i])
    i += 1
while j < len(data2):
    sum.append(data2[j])
    j += 1

for i in range(len(sum)):
    print(sum[i],end=' ')
