1、数列
某种特殊的数列a1, a2, a3, ...的定义如下：a1 = 1, a2 = 2, ... , an = 2 * an − 1 + an - 2 (n > 2)。
给出任意一个正整数k，求该数列的第k项模以32767的结果是多少？

输入描述:
第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数k (1 ≤ k < 1000000)。
输出描述:
n行，每行输出对应一个输入。输出应是一个非负整数。

输入
2
1
8
输出
1
408


#include <bits/stdc++.h>
using namespace std;

int main()
{
	int n;
	cin>>n;
	int input[n];
	int Max=0;
	for(int i=0;i<n;++i)
    {
        cin>>input[i];
        if(input[i]>Max)
        {
            Max=input[i];
        }
    }

	vector<int> data;
	data.push_back(1);
	data.push_back(2);
	for(int i=2;i<Max;++i)
    {
        int Size=data.size();
        long temp=(2*data[Size-1]+data[Size-2])%32767;
        data.push_back(temp);
    }

    for(int i=0;i<n;++i)
    {
        cout<<data[input[i]-1]<<endl;
    }

	return 0;
}


2、密码检查
小明同学最近开发了一个网站，在用户注册账户的时候，需要设置账户的密码，为了加强账户的安全性，小明对密码强度有一定要求：
1. 密码只能由大写字母，小写字母，数字构成；
2. 密码不能以数字开头；
3. 密码中至少出现大写字母，小写字母和数字这三种字符类型中的两种；
4. 密码长度至少为8
现在小明受到了n个密码，他想请你写程序判断这些密码中哪些是合适的，哪些是不合法的。

输入描述:
输入一个数n，接下来有n(n≤100)行，每行一个字符串，表示一个密码，输入保证字符串中只出现大写字母，小写字母和数字，字符串长度不超过100。
输出描述:
输入n行，如果密码合法，输出YES，不合法输出NO

输入
1
CdKfIfsiBgohWsydFYlMVRrGUpMALbmygeXdNpTmWkfyiZIKPtiflcgppuR
输出
YES


#include <bits/stdc++.h>
using namespace std;

bool isFirst(const string &str)
{
    if(str[0]>='0'&&str[0]<='9')
    {
        return false;
    }
    else
    {
        return true;
    }
}

bool isLength(const string &str)
{
    if(str.size()<8)
    {
        return false;
    }
    else
    {
        return true;
    }
}

bool isType(const string &str)
{
    int p1=0;
    int p2=0;
    int p3=0;

    for(int i=0;i<str.size();++i)
    {
        if(p1+p2+p3>=2)
        {
            break;
        }
        if(!p1&&str[i]>='0'&&str[i]<='9')
        {
            p1=1;
        }
        if(!p2&&str[i]>='a'&&str[i]<='z')
        {
            p2=1;
        }
        if(!p3&&str[i]>='A'&&str[i]<='Z')
        {
            p3=1;
        }
    }

    if(p1+p2+p3>=2)
    {
        return true;
    }
    else
    {
        return false;
    }
}

int main()
{
	int n;
	cin>>n;
	bool* result=new bool[n];
	for(int i=0;i<n;++i)
    {
        result[i]=false;

        string password;
        cin>>password;

        if(isFirst(password)&&isType(password)&&isLength(password))
        {
            result[i]=true;
        }
    }

    for(int i=0;i<n;++i)
    {
        if(result[i])
        {
            cout<<"YES"<<endl;
        }
        else
        {
            cout<<"NO"<<endl;
        }
    }
    delete[] result;

	return 0;
}

